<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="base_excel.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2818"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="0" parent="0"/><expanded_item id="1" parent="0"/><expanded_item id="2" parent="0"/><expanded_item id="3" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="products" custom_title="0" dock_id="1" table="4,8:mainproducts"/><dock_state state="000000ff00000000fd000000010000000200000356000002b2fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000003560000010b00ffffff000002940000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="89"/><column index="2" value="102"/><column index="3" value="169"/><column index="4" value="121"/><column index="5" value="112"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="91"/><column index="2" value="86"/><column index="3" value="85"/><column index="4" value="70"/><column index="5" value="111"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="80"/><column index="2" value="115"/><column index="3" value="229"/><column index="4" value="46"/><column index="5" value="106"/><column index="6" value="111"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">INSERT INTO purchases (customer_id, employee_id, product_id, quantity, total_price, purchase_date) VALUES
(81, 74, 6, 3, (SELECT price FROM products WHERE product_id = 6) * 3, '2024-12-20 11:38:17'),
(46, 82, 7, 4, (SELECT price FROM products WHERE product_id = 7) * 4, '2024-12-01 17:51:21'),
(53, 47, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-23 06:45:49'),
(90, 13, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-09 02:21:13'),
(67, 58, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-16 21:08:38'),
(12, 99, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-04 14:37:56'),
(29, 34, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-28 07:57:14'),
(75, 70, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-15 01:16:32'),
(42, 15, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-02 18:35:50'),
(8, 51, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-25 11:55:08'),
(97, 87, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-13 05:14:26'),
(64, 28, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-07 22:33:44'),
(19, 64, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-21 15:53:02'),
(36, 4, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-05 09:12:20'),
(83, 40, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-29 02:31:38'),
(50, 85, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-18 19:50:56'),
(7, 21, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-03 13:10:14'),
(24, 66, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-26 06:29:32'),
(71, 11, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-14 23:48:50'),
(38, 57, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-01 17:08:08'),
(85, 92, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-24 10:27:26'),
(52, 37, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-12 03:46:44'),
(8, 3, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-08 21:06:02'),
(25, 48, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-22 14:25:20'),
(72, 84, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-06 07:44:38'),
(39, 19, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-20 00:03:56'),
(5, 65, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-04 17:23:14'),
(98, 10, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-28 10:42:32'),
(65, 56, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-17 04:01:50'),
(21, 91, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-11 21:21:08'),
(37, 36, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-05 14:40:26'),
(84, 72, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-29 07:59:44'),
(51, 17, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-19 01:19:02'),
(9, 63, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-03 18:38:20'),
(26, 8, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-27 11:57:38'),
(73, 44, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-16 05:16:56'),
(40, 89, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-10 22:36:14'),
(6, 35, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-04 15:55:32'),
(100, 71, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-28 09:14:50'),
(66, 16, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-18 02:34:08'),
(23, 62, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-02 19:53:26'),
(39, 7, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-26 13:12:44'),
(86, 43, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-15 06:32:02'),
(53, 88, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-09 23:51:20'),
(10, 33, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-03 17:10:38'),
(27, 79, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-27 10:29:56'),
(74, 24, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-16 03:49:14'),
(41, 60, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-10 21:08:32'),
(7, 5, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-04 14:27:50'),
(23, 51, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-28 07:47:08'),
(70, 96, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-18 01:06:26'),
(37, 42, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-02 18:25:44'),
(83, 87, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-26 11:45:02'),
(50, 33, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-15 05:04:20'),
(6, 78, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-09 22:23:38'),
(100, 29, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-03 15:42:56'),
(67, 74, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-27 09:02:14'),
(24, 20, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-17 02:21:32'),
(40, 65, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-11 19:40:50'),
(87, 11, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-05 13:00:08'),
(54, 57, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-01 06:19:26'),
(11, 2, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-25 00:38:44'),
(28, 48, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-14 17:58:02'),
(75, 93, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-08 11:17:20'),
(42, 39, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-02 04:36:38'),
(8, 84, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-26 21:55:56'),
(95, 30, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-16 15:15:14'),
(62, 75, 3, 1, (SELECT price FROM products WHERE product_id = 3) * 1, '2024-12-10 08:34:32'),
(18, 21, 5, 3, (SELECT price FROM products WHERE product_id = 5) * 3, '2024-12-04 01:53:50'),
(35, 67, 9, 5, (SELECT price FROM products WHERE product_id = 9) * 5, '2024-12-28 19:13:08'),
(82, 12, 2, 2, (SELECT price FROM products WHERE product_id = 2) * 2, '2024-12-18 12:32:26'),
(49, 58, 8, 4, (SELECT price FROM products WHERE product_id = 8) * 4, '2024-12-02 05:51:44'),
(4, 3, 4, 1, (SELECT price FROM products WHERE product_id = 4) * 1, '2024-12-26 23:11:02'),
(96, 49, 7, 3, (SELECT price FROM products WHERE product_id = 7) * 3, '2024-12-16 16:30:20'),
(63, 94, 1, 5, (SELECT price FROM products WHERE product_id = 1) * 5, '2024-12-10 09:49:38'),
(20, 40, 10, 2, (SELECT price FROM products WHERE product_id = 10) * 2, '2024-12-04 03:09:56');</sql><sql name="SQL 2*">INSERT INTO employees (name, position, hire_date) VALUES
('Alice Smith', 'Software Engineer', '2020-01-15'),
('Bob Johnson', 'Data Scientist', '2021-03-22'),
('Carol Williams', 'Product Manager', '2019-11-01'),
('David Brown', 'UX Designer', '2022-05-10'),
('Eve Davis', 'Marketing Specialist', '2020-08-03'),
('Frank Miller', 'Sales Representative', '2021-12-18'),
('Grace Wilson', 'Financial Analyst', '2018-09-27'),
('Henry Moore', 'Human Resources Manager', '2023-02-08'),
('Ivy Taylor', 'Customer Support', '2020-06-12'),
('Jack Anderson', 'Project Manager', '2022-09-25'),
('Katie Thomas', 'Software Developer', '2019-04-30'),
('Liam Jackson', 'Data Analyst', '2021-07-14'),
('Mia White', 'Business Analyst', '2020-11-20'),
('Noah Harris', 'Graphic Designer', '2023-01-05'),
('Olivia Martin', 'Content Writer', '2022-03-09'),
('Peter Thompson', 'Technical Writer', '2019-08-16'),
('Quinn Garcia', 'QA Engineer', '2021-05-28'),
('Ryan Martinez', 'Network Engineer', '2020-12-01'),
('Sophia Robinson', 'System Administrator', '2022-07-22'),
('Thomas Clark', 'Database Administrator', '2018-10-11'),
('Ursula Rodriguez', 'Security Analyst', '2023-04-17'),
('Victor Lewis', 'DevOps Engineer', '2020-02-29'),
('Wendy Lee', 'Mobile Developer', '2021-09-06'),
('Xavier Walker', 'Frontend Developer', '2019-06-23'),
('Yvonne Hall', 'Backend Developer', '2022-11-14'),
('Zachary Allen', 'Full Stack Developer', '2020-09-18'),
('Abigail Young', 'UI Designer', '2023-03-02'),
('Benjamin Hernandez', 'Animator', '2021-01-07'),
('Charlotte King', 'Video Editor', '2019-12-30'),
('Daniel Wright', 'Sound Engineer', '2022-06-04'),
('Ella Lopez', 'Photographer', '2020-07-26'),
('Finn Hill', 'Illustrator', '2021-11-21'),
('Gabriella Scott', 'Copywriter', '2018-08-09'),
('Henry Green', 'Social Media Manager', '2023-05-13'),
('Isabella Baker', 'Public Relations', '2020-04-02'),
('Jack Adams', 'Event Planner', '2022-10-27'),
('Katherine Nelson', 'Recruiter', '2019-07-19'),
('Lucas Carter', 'Training Specialist', '2021-08-11'),
('Madison Mitchell', 'Compliance Officer', '2020-03-15'),
('Nathan Roberts', 'Risk Manager', '2022-12-23'),
('Oliver Turner', 'Actuary', '2018-11-05'),
('Penelope Phillips', 'Accountant', '2023-01-28'),
('Quentin Campbell', 'Auditor', '2020-05-08'),
('Riley Parker', 'Tax Advisor', '2021-10-03'),
('Sebastian Evans', 'Investment Analyst', '2019-09-22'),
('Taylor Edwards', 'Budget Analyst', '2022-04-15'),
('Ulysses Collins', 'Economist', '2020-01-20'),
('Victoria Stewart', 'Mathematician', '2023-06-10'),
('William Sanchez', 'Statistician', '2021-02-13'),
('Ximena Morris', 'Physicist', '2019-03-07'),
('Yara Rogers', 'Chemist', '2022-08-19'),
('Zane Reed', 'Biologist', '2020-10-25'),
('Aaliyah Cook', 'Geologist', '2023-02-21'),
('Brandon Morgan', 'Astronomer', '2021-04-08'),
('Caitlyn Bell', 'Meteorologist', '2019-05-16'),
('Dominic Bailey', 'Environmental Scientist', '2022-09-11'),
('Elena Rivera', 'Marine Biologist', '2020-11-08'),
('Felix Cooper', 'Botanist', '2023-03-17'),
('Genevieve Richardson', 'Zoologist', '2021-06-01'),
('Hugo Howard', 'Anthropologist', '2019-01-14'),
('Iris Ward', 'Archaeologist', '2022-07-07'),
('Jasper Torres', 'Paleontologist', '2020-08-23'),
('Kira Peterson', 'Geneticist', '2023-04-03'),
('Leo Gray', 'Neuroscientist', '2021-03-30'),
('Maya Ramirez', 'Psychologist', '2019-10-28'),
('Nolan James', 'Sociologist', '2022-11-17'),
('Ophelia Watson', 'Political Scientist', '2020-12-10'),
('Paxton Brooks', 'Historian', '2023-05-04'),
('Quiana Kelly', 'Linguist', '2021-05-25'),
('Rory Sanders', 'Philosopher', '2019-02-18'),
('Sierra Price', 'Theologian', '2022-08-12'),
('Trenton Bennett', 'Lawyer', '2020-09-05'),
('Uma Wood', 'Judge', '2023-06-21'),
('Vance Barnes', 'Paralegal', '2021-07-28'),
('Willow Ross', 'Police Officer', '2019-04-21'),
('Xander Henderson', 'Firefighter', '2022-10-10'),
('Yasmin Coleman', 'Paramedic', '2020-11-03'),
('Zion Jenkins', 'Doctor', '2023-01-17'),
('Anya Perry', 'Nurse', '2021-08-06'),
('Bryce Powell', 'Pharmacist', '2019-06-13'),
('Celeste Long', 'Dentist', '2022-09-28'),
('Dante Patterson', 'Optometrist', '2020-12-21'),
('Esme Hughes', 'Veterinarian', '2023-02-03'),
('Flynn Flores', 'Chef', '2021-09-20'),
('Gia Washington', 'Baker', '2019-07-07'),
('Holden Butler', 'Bartender', '2022-10-23'),
('Imani Simmons', 'Waiter', '2020-01-26'),
('Jared Foster', 'Barista', '2023-03-22'),
('Kiana Gonzales', 'Hair Stylist', '2021-10-15'),
('Levi Bryant', 'Makeup Artist', '2019-08-03'),
('Mila Alexander', 'Personal Trainer', '2022-11-06'),
('Nico Russell', 'Yoga Instructor', '2020-02-19'),
('Oriana Griffin', 'Dance Teacher', '2023-04-28'),
('Pierce Diaz', 'Music Teacher', '2021-11-12');</sql><sql name="SQL 3*">INSERT INTO customers (name, email, address) VALUES
('Sophia Rodriguez', 'sophia.rodriguez@example.com', '123 Main St, Anytown'),
('Ethan Lewis', 'ethan.lewis@example.com', '456 Oak Ave, Anytown'),
('Ava Lee', 'ava.lee@example.com', '789 Pine Ln, Anytown'),
('Jackson Walker', 'jackson.walker@example.com', '101 Elm Rd, Anytown'),
('Amelia Hall', 'amelia.hall@example.com', '112 Birch Ct, Anytown'),
('Grayson Allen', 'grayson.allen@example.com', '131 Maple Dr, Anytown'),
('Scarlett Young', 'scarlett.young@example.com', '141 Cedar St, Anytown'),
('Benjamin Hernandez', 'benjamin.hernandez@example.com', '151 Willow Ave, Anytown'),
('Luna King', 'luna.king@example.com', '161 Redwood Ln, Anytown'),
('Elijah Wright', 'elijah.wright@example.com', '171 Spruce Rd, Anytown'),
('Avery Lopez', 'avery.lopez@example.com', '181 Pine Ct, Anytown'),
('Daniel Hill', 'daniel.hill@example.com', '191 Oak Dr, Anytown'),
('Eleanor Scott', 'eleanor.scott@example.com', '201 Elm St, Anytown'),
('Jack Green', 'jack.green@example.com', '211 Birch Ave, Anytown'),
('Ellie Baker', 'ellie.baker@example.com', '221 Maple Ln, Anytown'),
('Owen Adams', 'owen.adams@example.com', '231 Cedar Rd, Anytown'),
('Lily Nelson', 'lily.nelson@example.com', '241 Willow Ct, Anytown'),
('Miles Carter', 'miles.carter@example.com', '251 Redwood Dr, Anytown'),
('Hazel Mitchell', 'hazel.mitchell@example.com', '261 Spruce St, Anytown'),
('Ezra Roberts', 'ezra.roberts@example.com', '271 Pine Ave, Anytown'),
('Nora Turner', 'nora.turner@example.com', '281 Oak Ln, Anytown'),
('Cameron Phillips', 'cameron.phillips@example.com', '291 Elm Rd, Anytown'),
('Aubrey Campbell', 'aubrey.campbell@example.com', '301 Birch Ct, Anytown'),
('Connor Parker', 'connor.parker@example.com', '311 Maple Dr, Anytown'),
('Addison Evans', 'addison.evans@example.com', '321 Cedar St, Anytown'),
('Wyatt Edwards', 'wyatt.edwards@example.com', '331 Willow Ave, Anytown'),
('Natalie Collins', 'natalie.collins@example.com', '341 Redwood Ln, Anytown'),
('Henry Stewart', 'henry.stewart@example.com', '351 Spruce Rd, Anytown'),
('Aurora Sanchez', 'aurora.sanchez@example.com', '361 Pine Ct, Anytown'),
('Joseph Morris', 'joseph.morris@example.com', '371 Oak Dr, Anytown'),
('Savannah Rogers', 'savannah.rogers@example.com', '381 Elm St, Anytown'),
('Hunter Reed', 'hunter.reed@example.com', '391 Birch Ave, Anytown'),
('Brooklyn Cook', 'brooklyn.cook@example.com', '401 Maple Ln, Anytown'),
('Timothy Morgan', 'timothy.morgan@example.com', '411 Cedar Rd, Anytown'),
('Caroline Bell', 'caroline.bell@example.com', '421 Willow Ct, Anytown'),
('Christian Bailey', 'christian.bailey@example.com', '431 Redwood Dr, Anytown'),
('Evelyn Rivera', 'evelyn.rivera@example.com', '441 Spruce St, Anytown'),
('Austin Cooper', 'austin.cooper@example.com', '451 Pine Ave, Anytown'),
('Aria Richardson', 'aria.richardson@example.com', '461 Oak Ln, Anytown'),
('Adam Howard', 'adam.howard@example.com', '471 Elm Rd, Anytown'),
('Madelyn Ward', 'madelyn.ward@example.com', '481 Birch Ct, Anytown'),
('Jonathan Torres', 'jonathan.torres@example.com', '491 Maple Dr, Anytown'),
('Allison Peterson', 'allison.peterson@example.com', '501 Cedar St, Anytown'),
('Nicholas Gray', 'nicholas.gray@example.com', '511 Willow Ave, Anytown'),
('Kinsley Ramirez', 'kinsley.ramirez@example.com', '521 Redwood Ln, Anytown'),
('Alexander James', 'alexander.james@example.com', '531 Spruce Rd, Anytown'),
('Isabelle Watson', 'isabelle.watson@example.com', '541 Pine Ct, Anytown'),
('Ryan Brooks', 'ryan.brooks@example.com', '551 Oak Dr, Anytown'),
('Sarah Kelly', 'sarah.kelly@example.com', '561 Elm St, Anytown'),
('David Sanders', 'david.sanders@example.com', '571 Birch Ave, Anytown'),
('Claire Price', 'claire.price@example.com', '581 Maple Ln, Anytown'),
('James Bennett', 'james.bennett@example.com', '591 Cedar Rd, Anytown'),
('Aaliyah Wood', 'aaliyah.wood@example.com', '601 Willow Ct, Anytown'),
('Jason Barnes', 'jason.barnes@example.com', '611 Redwood Dr, Anytown'),
('Katherine Ross', 'katherine.ross@example.com', '621 Spruce St, Anytown'),
('Christopher Henderson', 'christopher.henderson@example.com', '631 Pine Ave, Anytown'),
('Victoria Coleman', 'victoria.coleman@example.com', '641 Oak Ln, Anytown'),
('Matthew Jenkins', 'matthew.jenkins@example.com', '651 Elm Rd, Anytown'),
('Chloe Perry', 'chloe.perry@example.com', '661 Birch Ct, Anytown'),
('Joshua Powell', 'joshua.powell@example.com', '671 Maple Dr, Anytown'),
('Brianna Long', 'brianna.long@example.com', '681 Cedar St, Anytown'),
('Andrew Patterson', 'andrew.patterson@example.com', '691 Willow Ave, Anytown'),
('Evelyn Hughes', 'evelyn.hughes@example.com', '701 Redwood Ln, Anytown'),
('Anthony Flores', 'anthony.flores@example.com', '711 Spruce Rd, Anytown'),
('Serenity Washington', 'serenity.washington@example.com', '721 Pine Ct, Anytown'),
('Isaac Butler', 'isaac.butler@example.com', '731 Oak Dr, Anytown'),
('Kylie Simmons', 'kylie.simmons@example.com', '741 Elm St, Anytown'),
('Brandon Foster', 'brandon.foster@example.com', '751 Birch Ave, Anytown'),
('Katherine Gonzales', 'katherine.gonzales@example.com', '761 Maple Ln, Anytown'),
('Jacob Bryant', 'jacob.bryant@example.com', '771 Cedar Rd, Anytown'),
('Emma Alexander', 'emma.alexander@example.com', '781 Willow Ct, Anytown'),
('Ethan Russell', 'ethan.russell@example.com', '791 Redwood Dr, Anytown'),
('Kayla Griffin', 'kayla.griffin@example.com', '801 Spruce St, Anytown'),
('Caleb Diaz', 'caleb.diaz@example.com', '811 Pine Ave, Anytown'),
('Alexandra Hayes', 'alexandra.hayes@example.com', '821 Oak Ln, Anytown'),
('Kevin Jordan', 'kevin.jordan@example.com', '831 Elm Rd, Anytown');</sql><current_tab id="0"/></tab_sql></sqlb_project>
