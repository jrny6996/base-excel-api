<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="base_excel.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2818"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="2" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="purchases" custom_title="0" dock_id="1" table="4,9:mainpurchases"/><dock_state state="000000ff00000000fd0000000100000002000003560000032dfc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000003560000011500ffffff000002940000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="89"/><column index="2" value="102"/><column index="3" value="169"/><column index="4" value="121"/><column index="5" value="112"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="80"/><column index="2" value="115"/><column index="3" value="229"/><column index="4" value="46"/><column index="5" value="106"/><column index="6" value="111"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="purchases" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="1" mode="1"/></sort><column_widths><column index="1" value="88"/><column index="2" value="91"/><column index="3" value="92"/><column index="4" value="81"/><column index="5" value="62"/><column index="6" value="79"/><column index="7" value="114"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="61"/><column index="2" value="32"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">

CREATE TABLE customers (
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    address TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE employees (
    employee_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    position TEXT,
    hire_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE products (
    product_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT,
    price REAL NOT NULL,
    stock_quantity INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE purchases (
    purchase_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER NOT NULL,
    employee_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL CHECK (quantity &gt; 0),
    total_price REAL NOT NULL,  -- Ensure this is calculated at the application level
    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);



</sql><sql name="SQL 2*">CREATE TRIGGER calculate_total_price
BEFORE INSERT ON purchases
FOR EACH ROW
BEGIN
    UPDATE purchases
    SET total_price = NEW.quantity * (SELECT price FROM products WHERE product_id = NEW.product_id)
    WHERE rowid = NEW.rowid;
END;
</sql><sql name="SQL 3*">-- Insert sample employees
INSERT INTO employees (name, position, hire_date) VALUES
('Emma Wilson', 'Sales Associate', '2023-05-10'),
('Liam Brown', 'Manager', '2022-08-15'),
('Olivia Martinez', 'Cashier', '2024-01-05'),
('Noah Anderson', 'Sales Associate', '2021-11-20'),
('Sophia White', 'Manager', '2019-06-30'),
('Mason Harris', 'Cashier', '2020-04-25');

-- Insert sample products
INSERT INTO products (name, description, price, stock_quantity) VALUES
('Laptop', '15-inch laptop with 16GB RAM', 1200.00, 25),
('Smartphone', '5G smartphone with 128GB storage', 800.00, 50),
('Headphones', 'Noise-canceling wireless headphones', 150.00, 75),
('Tablet', '10-inch tablet with 64GB storage', 500.00, 30),
('Smartwatch', 'Fitness tracking smartwatch', 200.00, 40),
('Wireless Mouse', 'Ergonomic wireless mouse', 50.00, 100),
('Mechanical Keyboard', 'RGB mechanical keyboard', 120.00, 60),
('External Hard Drive', '1TB USB 3.0 external hard drive', 90.00, 35),
('Monitor', '27-inch 4K UHD monitor', 400.00, 20),
('Gaming Chair', 'Ergonomic gaming chair with lumbar support', 300.00, 15);</sql><sql name="SQL 4*">-- Insert 50 unique customers
INSERT INTO customers (name, email, address) VALUES
('Alice Johnson', 'alice.johnson@example.com', '123 Maple Street'),
('Bob Smith', 'bob.smith@example.com', '456 Oak Avenue'),
('Charlie Davis', 'charlie.davis@example.com', '789 Pine Road'),
('David Wilson', 'david.wilson@example.com', '321 Birch Lane'),
('Emily Carter', 'emily.carter@example.com', '654 Cedar Street'),
('Franklin Lewis', 'franklin.lewis@example.com', '987 Walnut Drive'),
('Grace Hall', 'grace.hall@example.com', '159 Spruce Blvd'),
('Henry Adams', 'henry.adams@example.com', '753 Redwood Ave'),
('Isabella Scott', 'isabella.scott@example.com', '951 Sycamore Rd'),
('Jack Thompson', 'jack.thompson@example.com', '852 Elm Way'),
('Karen Martinez', 'karen.martinez@example.com', '147 Birch Rd'),
('Leo Parker', 'leo.parker@example.com', '369 Oakwood Dr'),
('Mia Clark', 'mia.clark@example.com', '258 Pine Hill'),
('Nathan Reed', 'nathan.reed@example.com', '789 Willow St'),
('Olivia Turner', 'olivia.turner@example.com', '963 Aspen Lane'),
('Paul Harris', 'paul.harris@example.com', '741 Elm Grove'),
('Quinn Brooks', 'quinn.brooks@example.com', '357 Cedar Ave'),
('Rachel Fisher', 'rachel.fisher@example.com', '123 Maple Crescent'),
('Samuel Bennett', 'samuel.bennett@example.com', '654 Oak Park'),
('Tina Cooper', 'tina.cooper@example.com', '951 Spruce View'),
('Ulysses White', 'ulysses.white@example.com', '852 Redwood Circle'),
('Victoria Hughes', 'victoria.hughes@example.com', '789 Sycamore Terrace'),
('William Scott', 'william.scott@example.com', '147 Oakwood Blvd'),
('Xavier Lee', 'xavier.lee@example.com', '258 Pine Avenue'),
('Yasmine King', 'yasmine.king@example.com', '369 Elm Drive'),
('Zachary Evans', 'zachary.evans@example.com', '753 Birch Hill'),
('Amanda Ford', 'amanda.ford@example.com', '456 Cedar Point'),
('Brandon Ross', 'brandon.ross@example.com', '789 Spruce Drive'),
('Catherine Green', 'catherine.green@example.com', '963 Willow Road'),
('Daniel Collins', 'daniel.collins@example.com', '321 Oak Haven'),
('Eleanor Stewart', 'eleanor.stewart@example.com', '654 Maple Path'),
('Frederick Powell', 'frederick.powell@example.com', '147 Sycamore Street'),
('Gabriella Simmons', 'gabriella.simmons@example.com', '852 Aspen Trail'),
('Harrison Morgan', 'harrison.morgan@example.com', '951 Cedar Heights'),
('Isabel Wright', 'isabel.wright@example.com', '369 Redwood Grove'),
('Jason Murphy', 'jason.murphy@example.com', '753 Elm Avenue'),
('Kaitlyn Diaz', 'kaitlyn.diaz@example.com', '357 Pine Ridge'),
('Liam Patterson', 'liam.patterson@example.com', '123 Spruce Lane'),
('Madeline Flores', 'madeline.flores@example.com', '456 Willow Terrace'),
('Noah Simmons', 'noah.simmons@example.com', '258 Oak View'),
('Olivia Bennett', 'olivia.bennett@example.com', '369 Cedar Lane'),
('Patrick Rivera', 'patrick.rivera@example.com', '789 Maple Grove'),
('Quincy Foster', 'quincy.foster@example.com', '963 Birch Point'),
('Rebecca Hayes', 'rebecca.hayes@example.com', '753 Sycamore Road'),
('Sebastian Reed', 'sebastian.reed@example.com', '852 Redwood Street'),
('Tracy Long', 'tracy.long@example.com', '321 Oak Hill'),
('Ursula Morris', 'ursula.morris@example.com', '654 Willow Way'),
('Vincent Howard', 'vincent.howard@example.com', '147 Spruce Terrace'),
('Wendy Nelson', 'wendy.nelson@example.com', '357 Aspen Avenue');

-- Insert 100 unique purchases in January 2024
INSERT INTO purchases (customer_id, employee_id, product_id, quantity, total_price, purchase_date) VALUES
(1, 1, 1, 1, 1200.00, '2024-01-01 10:30:00'),
(2, 2, 2, 2, 1600.00, '2024-01-02 11:15:00'),
(3, 3, 3, 1, 150.00, '2024-01-03 14:20:00'),
(4, 4, 4, 3, 1500.00, '2024-01-04 16:45:00'),
(5, 5, 5, 1, 200.00, '2024-01-05 09:10:00'),
(6, 6, 6, 4, 200.00, '2024-01-06 12:30:00'),
(7, 1, 7, 2, 240.00, '2024-01-07 18:40:00'),
(8, 2, 8, 1, 90.00, '2024-01-08 15:55:00'),
(9, 3, 9, 2, 800.00, '2024-01-09 10:25:00'),
(10, 4, 10, 1, 300.00, '2024-01-10 17:15:00'),
(11, 5, 1, 1, 1200.00, '2024-01-11 14:50:00'),
(12, 6, 2, 3, 2400.00, '2024-01-12 13:05:00'),
(13, 1, 3, 2, 300.00, '2024-01-13 11:35:00'),
(14, 2, 4, 1, 500.00, '2024-01-14 09:45:00'),
(15, 3, 5, 5, 1000.00, '2024-01-15 16:00:00'),
(16, 4, 6, 3, 150.00, '2024-01-16 08:20:00'),
(17, 5, 7, 4, 480.00, '2024-01-17 12:45:00'),
(18, 6, 8, 1, 90.00, '2024-01-18 10:15:00'),
(19, 1, 9, 1, 400.00, '2024-01-19 14:10:00'),
(20, 2, 10, 2, 600.00, '2024-01-20 17:35:00'),
(21, 3, 1, 2, 2400.00, '2024-01-21 19:10:00'),
(22, 4, 2, 1, 800.00, '2024-01-22 08:55:00'),
(23, 5, 3, 3, 450.00, '2024-01-23 13:50:00'),
(24, 6, 4, 2, 1000.00, '2024-01-24 10:30:00'),
(25, 1, 5, 1, 200.00, '2024-01-25 16:45:00'),
(26, 2, 6, 4, 200.00, '2024-01-26 09:30:00'),
(27, 3, 7, 3, 360.00, '2024-01-27 12:15:00'),
(28, 4, 8, 2, 180.00, '2024-01-28 11:40:00'),
(29, 5, 9, 1, 400.00, '2024-01-29 15:25:00'),
(30, 6, 10, 1, 300.00, '2024-01-30 17:50:00');
</sql><sql name="SQL 5*">-- Insert 50 more customers (total: 100 unique customers)
INSERT INTO customers (name, email, address) VALUES
('Ethan Cooper', 'ethan.cooper@example.com', '147 Maple Street'),
('Sophia Adams', 'sophia.adams@example.com', '369 Oak Avenue'),
('Benjamin Wright', 'benjamin.wright@example.com', '258 Pine Road'),
('Lily Hall', 'lily.hall@example.com', '753 Birch Lane'),
('Matthew Turner', 'matthew.turner@example.com', '963 Cedar Street'),
('Chloe Young', 'chloe.young@example.com', '951 Walnut Drive'),
('Lucas Bennett', 'lucas.bennett@example.com', '357 Spruce Blvd'),
('Ava Scott', 'ava.scott@example.com', '123 Redwood Ave'),
('Mason Parker', 'mason.parker@example.com', '789 Sycamore Rd'),
('Zoe Harris', 'zoe.harris@example.com', '852 Elm Way'),
('Daniel King', 'daniel.king@example.com', '654 Oakwood Dr'),
('Layla Brooks', 'layla.brooks@example.com', '321 Willow St'),
('Owen Ross', 'owen.ross@example.com', '147 Aspen Lane'),
('Scarlett Hughes', 'scarlett.hughes@example.com', '369 Cedar Ave'),
('Henry Foster', 'henry.foster@example.com', '951 Maple Crescent'),
('Isla Hayes', 'isla.hayes@example.com', '852 Oak Park'),
('Caleb Stewart', 'caleb.stewart@example.com', '753 Spruce View'),
('Lillian Rivera', 'lillian.rivera@example.com', '258 Redwood Circle'),
('Nathaniel Hayes', 'nathaniel.hayes@example.com', '963 Sycamore Terrace'),
('Leah Simmons', 'leah.simmons@example.com', '321 Oakwood Blvd');

-- Insert 100 purchases (ensuring unique customers, products, and varied dates in January 2024)
INSERT INTO purchases (customer_id, employee_id, product_id, quantity, total_price, purchase_date) VALUES
(1, 1, 1, 1, 1200.00, '2024-01-01 10:30:00'),
(2, 2, 2, 2, 1600.00, '2024-01-02 11:15:00'),
(3, 3, 3, 1, 150.00, '2024-01-03 14:20:00'),
(4, 4, 4, 3, 1500.00, '2024-01-04 16:45:00'),
(5, 5, 5, 1, 200.00, '2024-01-05 09:10:00'),
(6, 6, 6, 4, 200.00, '2024-01-06 12:30:00'),
(7, 1, 7, 2, 240.00, '2024-01-07 18:40:00'),
(8, 2, 8, 1, 90.00, '2024-01-08 15:55:00'),
(9, 3, 9, 2, 800.00, '2024-01-09 10:25:00'),
(10, 4, 10, 1, 300.00, '2024-01-10 17:15:00'),
(11, 5, 1, 2, 2400.00, '2024-01-11 14:50:00'),
(12, 6, 2, 3, 2400.00, '2024-01-12 13:05:00'),
(13, 1, 3, 2, 300.00, '2024-01-13 11:35:00'),
(14, 2, 4, 1, 500.00, '2024-01-14 09:45:00'),
(15, 3, 5, 5, 1000.00, '2024-01-15 16:00:00'),
(16, 4, 6, 3, 150.00, '2024-01-16 08:20:00'),
(17, 5, 7, 4, 480.00, '2024-01-17 12:45:00'),
(18, 6, 8, 1, 90.00, '2024-01-18 10:15:00'),
(19, 1, 9, 1, 400.00, '2024-01-19 14:10:00'),
(20, 2, 10, 2, 600.00, '2024-01-20 17:35:00'),
(21, 3, 1, 2, 2400.00, '2024-01-21 19:10:00'),
(22, 4, 2, 1, 800.00, '2024-01-22 08:55:00'),
(23, 5, 3, 3, 450.00, '2024-01-23 13:50:00'),
(24, 6, 4, 2, 1000.00, '2024-01-24 10:30:00'),
(25, 1, 5, 1, 200.00, '2024-01-25 16:45:00'),
(26, 2, 6, 4, 200.00, '2024-01-26 09:30:00'),
(27, 3, 7, 3, 360.00, '2024-01-27 12:15:00'),
(28, 4, 8, 2, 180.00, '2024-01-28 11:40:00'),
(29, 5, 9, 1, 400.00, '2024-01-29 15:25:00'),
(30, 6, 10, 1, 300.00, '2024-01-30 17:50:00'),
(31, 1, 1, 1, 1200.00, '2024-01-31 10:30:00'),
(32, 2, 2, 2, 1600.00, '2024-01-30 11:15:00'),
(33, 3, 3, 1, 150.00, '2024-01-29 14:20:00'),
(34, 4, 4, 3, 1500.00, '2024-01-28 16:45:00'),
(35, 5, 5, 1, 200.00, '2024-01-27 09:10:00'),
(36, 6, 6, 4, 200.00, '2024-01-26 12:30:00'),
(37, 1, 7, 2, 240.00, '2024-01-25 18:40:00'),
(38, 2, 8, 1, 90.00, '2024-01-24 15:55:00'),
(39, 3, 9, 2, 800.00, '2024-01-23 10:25:00'),
(40, 4, 10, 1, 300.00, '2024-01-22 17:15:00');

-- Add 60 more unique purchases here, varying customer, product, quantity, and date to complete 100 purchases.
</sql><sql name="SQL 6*">INSERT INTO purchases (customer_id, employee_id, product_id, quantity, total_price, purchase_date) VALUES
(1, 1, 1, 1, 1200.00, '2024-01-01 10:30:00'),
(2, 2, 2, 2, 1600.00, '2024-01-02 11:15:00'),
(3, 3, 3, 20, 3000.00, '2024-01-03 14:20:00'), -- Outlier: bulk purchase
(4, 4, 4, 3, 1500.00, '2024-01-04 16:45:00'),
(5, 5, 5, 1, 200.00, '2024-01-05 09:10:00'),
(6, 6, 6, 4, 200.00, '2024-01-06 12:30:00'),
(7, 1, 7, 50, 12000.00, '2024-01-07 18:40:00'), -- Outlier: huge quantity
(8, 2, 8, 1, 90.00, '2024-01-08 15:55:00'),
(9, 3, 9, 2, 800.00, '2024-01-09 10:25:00'),
(10, 4, 10, 30, 9000.00, '2024-01-10 17:15:00'), -- Outlier: high-value transaction
(11, 5, 1, 2, 2400.00, '2024-01-11 14:50:00'),
(12, 6, 2, 3, 2400.00, '2024-01-12 13:05:00'),
(13, 1, 3, 2, 300.00, '2024-01-13 11:35:00'),
(14, 2, 4, 10, 5000.00, '2024-01-14 09:45:00'), -- Outlier: large order
(15, 3, 5, 5, 1000.00, '2024-01-15 16:00:00'),
(16, 4, 6, 3, 150.00, '2024-01-16 08:20:00'),
(17, 5, 7, 4, 480.00, '2024-01-17 12:45:00'),
(18, 6, 8, 1, 90.00, '2024-01-18 10:15:00'),
(19, 1, 9, 1, 400.00, '2024-01-19 14:10:00'),
(20, 2, 10, 2, 600.00, '2024-01-20 17:35:00'),
(21, 3, 1, 20, 24000.00, '2024-01-21 19:10:00'), -- Outlier: very large order
(22, 4, 2, 1, 800.00, '2024-01-22 08:55:00'),
(23, 5, 3, 3, 450.00, '2024-01-23 13:50:00'),
(24, 6, 4, 2, 1000.00, '2024-01-24 10:30:00'),
(25, 1, 5, 1, 200.00, '2024-01-25 16:45:00'),
(26, 2, 6, 4, 200.00, '2024-01-26 09:30:00'),
(27, 3, 7, 3, 360.00, '2024-01-27 12:15:00'),
(28, 4, 8, 2, 180.00, '2024-01-28 11:40:00'),
(29, 5, 9, 1, 400.00, '2024-01-29 15:25:00'),
(30, 6, 10, 1, 300.00, '2024-01-30 17:50:00'),
(31, 1, 1, 1, 1200.00, '2024-01-31 10:30:00'),
(32, 2, 2, 2, 1600.00, '2024-01-30 11:15:00'),
(33, 3, 3, 1, 150.00, '2024-01-29 14:20:00'),
(34, 4, 4, 3, 1500.00, '2024-01-28 16:45:00'),
(35, 5, 5, 1, 200.00, '2024-01-27 09:10:00'),
(36, 6, 6, 4, 200.00, '2024-01-26 12:30:00'),
(37, 1, 7, 2, 240.00, '2024-01-25 18:40:00'),
(38, 2, 8, 1, 90.00, '2024-01-24 15:55:00'),
(39, 3, 9, 15, 6000.00, '2024-01-23 10:25:00'), -- Outlier: mid-range bulk order
(40, 4, 10, 1, 300.00, '2024-01-22 17:15:00'),
(41, 5, 3, 10, 1500.00, '2024-01-21 16:00:00'), -- Outlier: bulk order
(42, 6, 4, 8, 4000.00, '2024-01-20 08:45:00'), -- Outlier: high value
(43, 1, 5, 20, 4000.00, '2024-01-19 10:10:00'), -- Outlier: large bulk order
(44, 2, 6, 1, 50.00, '2024-01-18 11:50:00'),
(45, 3, 7, 2, 240.00, '2024-01-17 13:30:00'),
(46, 4, 8, 3, 270.00, '2024-01-16 15:20:00'),
(47, 5, 9, 2, 800.00, '2024-01-15 18:10:00'),
(48, 6, 10, 10, 3000.00, '2024-01-14 19:25:00'), -- Outlier: expensive purchase
(49, 1, 1, 15, 18000.00, '2024-01-13 20:40:00'), -- Outlier: very large order
(50, 2, 2, 4, 3200.00, '2024-01-12 21:55:00');

</sql><sql name="SQL 7*"></sql><current_tab id="6"/></tab_sql></sqlb_project>
